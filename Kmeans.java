/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kmeans;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Martin R.P
 */
public class Kmeans extends javax.swing.JFrame {
    boolean termina=false,clasificando=false;
    double x,y,gx,gy,mx,my;
    double[]pgx,pgy,cxg,cyg;
    int[]pcg,bl,gr,re;
    int nc,points,i=0;
    String nop="",it="",atractores="",clases="",cf="";
    String[] aux,aux2;
    ArrayList<Punto> atr = new ArrayList<Punto>();
    ArrayList<Punto> puntos = new ArrayList<Punto>();
    ArrayList<Punto> centros = new ArrayList<Punto>();
    ArrayList<Punto> tmp = new ArrayList<Punto>();
    boolean error;
    Punto escucha=new Punto();
    
    /**
     * Creates new form Ventana
     */

    public Kmeans() {
        initComponents();
        jpp.addMouseListener(escucha);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jta = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jti = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtp = new javax.swing.JTextField();
        jpp = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtcf = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);

        jLabel1.setText("Numero de clases:");

        jLabel2.setText("Atractores:");

        jta.setColumns(20);
        jta.setRows(5);
        jta.setPreferredSize(new java.awt.Dimension(100, 100));
        jScrollPane1.setViewportView(jta);

        jLabel3.setText("Numero de iteraciones:");

        jButton1.setText("Clacificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Numero de puntos:");

        jpp.setPreferredSize(new java.awt.Dimension(1150, 570));

        javax.swing.GroupLayout jppLayout = new javax.swing.GroupLayout(jpp);
        jpp.setLayout(jppLayout);
        jppLayout.setHorizontalGroup(
            jppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        jppLayout.setVerticalGroup(
            jppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        jButton2.setText("Graficar Puntos.");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jtcf.setColumns(20);
        jtcf.setRows(5);
        jtcf.setPreferredSize(new java.awt.Dimension(100, 100));
        jScrollPane2.setViewportView(jtcf);

        jLabel5.setText("Centroides finales.");

        jButton3.setText("Guardar atractor");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(jButton2))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jButton3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jti, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jpp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(jtc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1)
                                .addComponent(jti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        /*for(int i=0;i<nc;i++){
            System.out.println(bl[i]+" "+gr[i]+" "+re[i]);
        }*/
        jti.setText("");
        jtcf.setText("");
        clasificando=true;
        i=0;
        error=false;
        clases=jtc.getText();
        atractores=jta.getText();
        
        if(clases.equals("")||atractores.equals("")){
            JOptionPane.showMessageDialog(null, "No puede haber campos vacios.");
        }else{
            aux=atractores.split("\n");
            nc=Integer.valueOf(clases);
            pcg=new int[points];
            cxg=new double[nc];
            cyg=new double[nc];
            bl=new int[nc];
            gr=new int[nc];
            re=new int[nc];
            for(int i=0;i<nc;i++){
                bl[i]=(int)(Math.random()*254);
                gr[i]=(int)(Math.random()*254);
                re[i]=(int)(Math.random()*254);
            }
            if(nc>points){
                JOptionPane.showMessageDialog(null, "No puede haber mas clases que puntos.");
                limpiar();
            }else{
                if(aux.length!=nc){
                    JOptionPane.showMessageDialog(null, "El numero de atractores debe ser igual al de las clases.");
                    limpiar();
                }else{
                    for(int i=0;i<aux.length;i++){
                        aux2=aux[i].split(",");
                        if(Double.valueOf(aux2[0])>10||Double.valueOf(aux2[1])>5){
                            error=true;
                            break;
                        }else{
                            if(aux2.length!=2){
                            error=true;
                            break;
                            }else{
                                Punto at=new Punto();
                                at.x=Double.valueOf(aux2[0]);
                                at.y=Double.valueOf(aux2[1]);
                                atr.add(at);
                            }
                        }
                    }
                    if(error){
                        JOptionPane.showMessageDialog(null, "Cada atractor solo debe tener 2 coordenadas.\nLa coordenada x no puede pasar de 10 y la coordenada y no puede pasar de 5");
                    }else{                        
                        while(termina==false){
                            i++;
                            tmp=atr;
                            clacificarpuntos();                           
                            try{
                                Plaano pl=new Plaano(jpp);
                                pl.paint(pgx,pgy,points,nc,pcg,cxg,cyg,re,gr,bl,clasificando);
                                jti.setText(String.valueOf(i)); 
                                Thread.sleep(2000);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(Kmeans.class.getName()).log(Level.SEVERE, null, ex);
                            }                           
                            atr=centros;  
                            for(int j=0;j<centros.size();j++){
                                for(Punto p:tmp){
                                    if(p.x==centros.get(j).x&&p.y==centros.get(j).y){
                                       
                                        termina=true;
                                    }else{
                                        
                                        termina=false;           
                                    }
                                }
                            }                                                     
                            }

                        }
                    }
                }
            }
        for(int i=0;i<nc;i++){
            cf+=String.valueOf(cxg[i])+" "+String.valueOf(cyg[i])+"\n";
        }
        clasificando=false;
        jtcf.setText(cf);
        cf="";
        atractores="";
        termina=false;
        atr =new ArrayList<Punto>();
        centros=new ArrayList<Punto>();
        tmp=new ArrayList<Punto>();
        pcg=new int[0];
        cxg=new double[0];
        cyg=new double[0]; 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        puntos = new ArrayList<Punto>();
        nop=jtp.getText();
        if(nop.equals(""))
            JOptionPane.showMessageDialog(null, "No has ingresado un numero de puntos.");
        else{
            points=Integer.valueOf(nop);
            pgx=new double[points];
            pgy=new double[points];
            generarpuntos();
            Plaano pl=new Plaano(jpp);
            pl.paint(pgx,pgy,points,nc,pcg,cxg,cyg,re,gr,bl,clasificando);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        mx=escucha.xmo;
        my=escucha.ymo;
        if(mx>100&&mx<1100&&my>50&&my<550){
            mx=(mx-100);
            my=(my-550)*-1;
            atractores+=String.valueOf(mx/100)+","+String.valueOf(my/100)+"\n";
            jta.setText(atractores);
        }else{
            JOptionPane.showMessageDialog(null, "Punto fuera del plano.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kmeans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kmeans().setVisible(true);
            }
        });
    }
    void limpiar(){
        jtp.setText("");
        jti.setText("");
        jtc.setText("");
        jta.setText("");
    }
    void generarpuntos(){
        for(int i=0;i<points;i++){
            Punto p=new Punto();
            p.generar();
            puntos.add(p);
        }
        
        for(int i=0;i<puntos.size();i++){
            pgx[i]=puntos.get(i).x;
            pgy[i]=puntos.get(i).y;
        }
    }
    
    void clacificarpuntos(){        
        Clase c=new Clase();
        centros=c.GenerarClase(atr, puntos);
        for(int i=0;i<puntos.size();i++){
            pgx[i]=puntos.get(i).x;
            pgy[i]=puntos.get(i).y;
            pcg[i]=puntos.get(i).clase;
        }
        for(int i=0;i<nc;i++){
            cxg[i]=centros.get(i).x;
            cyg[i]=centros.get(i).y;
        }       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpp;
    private javax.swing.JTextArea jta;
    private javax.swing.JTextField jtc;
    private javax.swing.JTextArea jtcf;
    private javax.swing.JTextField jti;
    private javax.swing.JTextField jtp;
    // End of variables declaration//GEN-END:variables
}

